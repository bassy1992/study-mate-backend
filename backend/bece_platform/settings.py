"""
Django settings for bece_platform project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-yz20)a7#7$v0sdxa3*kl#^y!gl19b$a^hk*jq3!*d=g(+^4hsz')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True').lower() == 'true'

ALLOWED_HOSTS = [
    '127.0.0.1', 
    'localhost', 
    'testserver', 
    '::1',
    '.railway.app',
    '.vercel.app',
    '.now.sh'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third party apps
    'rest_framework',
    'rest_framework.authtoken',
    'drf_spectacular',
    
    # Local apps
    'accounts',
    'courses',
    'bece',
    'ecommerce',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bece_platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bece_platform.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Use PostgreSQL for production, SQLite for development
if os.getenv('DATABASE_URL'):
    # Production database (PostgreSQL)
    import dj_database_url
    DATABASES = {
        'default': dj_database_url.parse(os.getenv('DATABASE_URL'))
    }
else:
    # Development database (SQLite)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Static files configuration for production
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'EXCEPTION_HANDLER': 'bece_platform.exception_handlers.custom_exception_handler',
}

# CORS settings
INSTALLED_APPS += ['corsheaders']

# CORS configuration for production
if DEBUG:
    # Development - allow all origins
    CORS_ALLOW_ALL_ORIGINS = True
else:
    # Production - specific origins only
    CORS_ALLOWED_ORIGINS = [
        "https://your-frontend-domain.vercel.app",
        "https://your-custom-domain.com",
    ]

CORS_ALLOW_CREDENTIALS = True

# Allow common headers/methods
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]


# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Custom user model
AUTH_USER_MODEL = 'accounts.CustomUser'

# MTN Mobile Money Configuration
MTN_MOMO_BASE_URL = os.getenv('MTN_MOMO_BASE_URL', 'https://sandbox.momodeveloper.mtn.com')
MTN_MOMO_SUBSCRIPTION_KEY = os.getenv('MTN_MOMO_SUBSCRIPTION_KEY')  # Set in environment variables
MTN_MOMO_USER_ID = os.getenv('MTN_MOMO_USER_ID')  # Set in environment variables
MTN_MOMO_API_KEY = os.getenv('MTN_MOMO_API_KEY')  # Set in environment variables
MTN_MOMO_ENVIRONMENT = os.getenv('MTN_MOMO_ENVIRONMENT', 'sandbox')

# For production, use these URLs:
# MTN_MOMO_BASE_URL = 'https://momodeveloper.mtn.com'
# MTN_MOMO_ENVIRONMENT = 'production'

# Brevo (Sendinblue) Email Configuration
BREVO_API_KEY = os.getenv('BREVO_API_KEY')  # Set this in your environment variables
BREVO_API_URL = 'https://api.brevo.com/v3'
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL', 'awuleynovember@gmail.com')
DEFAULT_FROM_NAME = os.getenv('DEFAULT_FROM_NAME', 'GhanaLearn')

# Password Reset Configuration
PASSWORD_RESET_TIMEOUT = 86400  # 24 hours in seconds
FRONTEND_URL = os.getenv('FRONTEND_URL', 'http://localhost:8080')  # Your frontend URL

# drf-spectacular settings for Swagger documentation
SPECTACULAR_SETTINGS = {
    'TITLE': 'BECE Platform API',
    'DESCRIPTION': 'Comprehensive API for BECE (Basic Education Certificate Examination) preparation platform with course management, practice tests, and e-commerce functionality.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'CONTACT': {
        'name': 'BECE Platform Support',
        'email': 'support@beceplatform.com',
    },
    'LICENSE': {
        'name': 'MIT License',
    },
    'TAGS': [
        {
            'name': 'Authentication',
            'description': 'User authentication and profile management'
        },
        {
            'name': 'Courses',
            'description': 'Course management, lessons, and quizzes'
        },
        {
            'name': 'BECE',
            'description': 'BECE practice tests and performance analytics'
        },
        {
            'name': 'E-commerce',
            'description': 'Bundles, payments, and subscription management'
        },
    ],
    'COMPONENT_SPLIT_REQUEST': True,
    'SORT_OPERATIONS': False,
    'ENUM_NAME_OVERRIDES': {
        'ValidationErrorEnum': 'drf_spectacular.utils.ValidationErrorEnum.choices',
    },
    'POSTPROCESSING_HOOKS': [
        'drf_spectacular.hooks.postprocess_schema_enums'
    ],
    'AUTHENTICATION_WHITELIST': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'SECURITY': [
        {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization',
            'description': 'Token-based authentication using format: Token <your-token>'
        }
    ],
    'SERVERS': [
        {
            'url': 'http://127.0.0.1:8000',
            'description': 'Development server'
        },
        {
            'url': 'https://api.beceplatform.com',
            'description': 'Production server'
        }
    ],
}